<?php

/**
 * This is the model base class for the table "category".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Category".
 *
 * Columns in table "category" available as properties of the model,
 * followed by relations of table "category" available as properties of the model.
 *
 * @property integer $category_id
 * @property integer $parent_id
 * @property integer $sort_order
 * @property string $create_time
 * @property string $update_time
 *
 * @property Category $parent
 * @property Category[] $categories
 * @property CategoryI18n $categoryI18n
 * @property CategoryI18n[] $categoryI18ns
 * @property Product2category[] $product2categories
 */
abstract class BaseCategory extends GxActiveRecord {

	public $filterI18n;

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'category';
	}

	public static function label($n = 1) {
		return Yii::t('m/category', 'Category|Categories', $n);
	}

	public static function representingColumn() {
		return 'create_time';
	}

	public function rules() {
		return array(
			array('parent_id, sort_order', 'numerical', 'integerOnly'=>true),
			array('create_time, update_time', 'safe'),
			array('parent_id, sort_order, create_time, update_time', 'default', 'setOnEmpty' => true, 'value' => null),
			array('category_id, parent_id, sort_order, create_time, update_time', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'parent' => array(self::BELONGS_TO, 'Category', 'parent_id'),
			'categories' => array(self::HAS_MANY, 'Category', 'parent_id'),
			'categoryI18n' => array(self::HAS_ONE, 'CategoryI18n', 'category_id', 'condition' => 'categoryI18n.language_id=:language_id', 'params' => array(':language_id' => Yii::app()->controller->language_id)),
			'categoryI18ns' => array(self::HAS_MANY, 'CategoryI18n', 'category_id', 'index' => 'language_id'),
			'product2categories' => array(self::HAS_MANY, 'Product2category', 'category_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'category_id' => Yii::t('m/category', 'Category'),
			'parent_id' => null,
			'sort_order' => Yii::t('m/category', 'Sort Order'),
			'create_time' => Yii::t('m/category', 'Create Time'),
			'update_time' => Yii::t('m/category', 'Update Time'),
			'parent' => null,
			'categories' => null,
			'categoryI18ns' => null,
			'product2categories' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('t.category_id', $this->category_id);
		$criteria->compare('t.parent_id', $this->parent_id);
		$criteria->compare('t.sort_order', $this->sort_order);
		$criteria->compare('t.create_time', $this->create_time, true);
		$criteria->compare('t.update_time', $this->update_time, true);

		$criteria->with = array('categoryI18ns');
		$criteria->group = 't.category_id';
		$criteria->together = true;

		$criteria->compare('categoryI18ns.title', $this->filterI18n->title, true);
		$criteria->compare('categoryI18ns.keywords', $this->filterI18n->keywords, true);
		$criteria->compare('categoryI18ns.description', $this->filterI18n->description, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
			'sort'=>array(
				'defaultOrder' => 't.sort_order DESC, t.category_id ASC',
				'multiSort'=>true,
				'attributes'=>array(
					'sort_order'=>array(
						'desc'=>'t.sort_order DESC',
						'asc'=>'t.sort_order ASC',
					),
					'*',
				),
			),
			'pagination' => array(
				'pageSize' => Yii::app()->request->getParam('pageSize', 10),
				'pageVar' => 'page',
			),
		));
	}

	public function behaviors() {
		return array(
			'CTimestampBehavior'=>array(
				'class' => 'zii.behaviors.CTimestampBehavior',
				'updateAttribute' => 'update_time',
				'createAttribute' => 'create_time',
				'setUpdateOnCreate' => true,
			),
        );
	}
}