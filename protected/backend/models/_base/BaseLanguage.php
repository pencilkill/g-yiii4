<?php

/**
 * This is the model base class for the table "language".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Language".
 *
 * Columns in table "language" available as properties of the model,
 * followed by relations of table "language" available as properties of the model.
 *
 * @property integer $language_id
 * @property string $code
 * @property string $title
 * @property integer $sort_order
 * @property integer $status
 *
 * @property CategoryI18n[] $categoryI18ns
 * @property InformationI18n[] $informationI18ns
 * @property NewsI18n[] $newsI18ns
 * @property PictureI18n[] $pictureI18ns
 * @property ProductI18n[] $productI18ns
 */
abstract class BaseLanguage extends GxActiveRecord {


	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'language';
	}

	public static function label($n = 1) {
		return Yii::t('m/language', 'Language|Languages', $n);
	}

	public static function representingColumn() {
		return 'code';
	}

	public function rules() {
		return array(
			array('code, title', 'required'),
			array('sort_order, status', 'numerical', 'integerOnly'=>true),
			array('code', 'length', 'max'=>8),
			array('title', 'length', 'max'=>64),
			array('sort_order, status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('language_id, code, title, sort_order, status', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'categoryI18ns' => array(self::HAS_MANY, 'CategoryI18n', 'language_id'),
			'informationI18ns' => array(self::HAS_MANY, 'InformationI18n', 'language_id'),
			'newsI18ns' => array(self::HAS_MANY, 'NewsI18n', 'language_id'),
			'pictureI18ns' => array(self::HAS_MANY, 'PictureI18n', 'language_id'),
			'productI18ns' => array(self::HAS_MANY, 'ProductI18n', 'language_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'language_id' => Yii::t('m/language', 'Language'),
			'code' => Yii::t('m/language', 'Code'),
			'title' => Yii::t('m/language', 'Title'),
			'sort_order' => Yii::t('m/language', 'Sort Order'),
			'status' => Yii::t('m/language', 'Status'),
			'categoryI18ns' => null,
			'informationI18ns' => null,
			'newsI18ns' => null,
			'pictureI18ns' => null,
			'productI18ns' => null,
		);
	}

	public function search() {
		$alias = $this->tableAlias;
	
		$criteria = new CDbCriteria;

		$criteria->compare("{$alias}.language_id", $this->language_id);
		$criteria->compare("{$alias}.code", $this->code, true);
		$criteria->compare("{$alias}.title", $this->title, true);
		$criteria->compare("{$alias}.sort_order", $this->sort_order);
		$criteria->compare("{$alias}.status", $this->status);


		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
			'sort'=>array(
				'defaultOrder' => "{$alias}.sort_order DESC, {$alias}.language_id ASC",
				'multiSort'=>true,
				'attributes'=>array(
					'sort_order'=>array(
						'desc'=>"{$alias}.sort_order DESC",
						'asc'=>"{$alias}.sort_order ASC",
					),
					'*',
				),
			),
			'pagination' => array(
				'pageSize' => Yii::app()->request->getParam('pageSize', 10),
				'pageVar' => 'page',
			),
		));
	}

	public function behaviors() {
		return array(
			'CTimestampBehavior'=>array(
				'class' => 'zii.behaviors.CTimestampBehavior',
				'updateAttribute' => null,
                'createAttribute' => null,
				'setUpdateOnCreate' => true,
			),
        );
	}
}