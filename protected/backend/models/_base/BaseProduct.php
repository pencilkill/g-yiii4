<?php

/**
 * This is the model base class for the table "product".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Product".
 *
 * Columns in table "product" available as properties of the model,
 * followed by relations of table "product" available as properties of the model.
 *
 * @property integer $product_id
 * @property integer $sort_order
 * @property string $create_time
 * @property string $update_time
 *
 * @property Product2category[] $product2categories
 * @property ProductI18n $productI18n
 * @property ProductI18n[] $productI18ns
 * @property ProductImage[] $productImages
 */
abstract class BaseProduct extends GxActiveRecord {

	public $filterI18n;

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'product';
	}

	public static function label($n = 1) {
		return Yii::t('m/product', 'Product|Products', $n);
	}

	public static function representingColumn() {
		return 'create_time';
	}

	public function rules() {
		return array(
			array('sort_order', 'numerical', 'integerOnly'=>true),
			array('create_time, update_time', 'safe'),
			array('sort_order, create_time, update_time', 'default', 'setOnEmpty' => true, 'value' => null),
			array('product_id, sort_order, create_time, update_time', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'product2categories' => array(self::HAS_MANY, 'Product2category', 'product_id'),
			'productI18n' => array(self::HAS_ONE, 'ProductI18n', 'product_id', 'scopes' => array('t' => array())),
			'productI18ns' => array(self::HAS_MANY, 'ProductI18n', 'product_id', 'index' => 'language_id'),
			'productImages' => array(self::HAS_MANY, 'ProductImage', 'product_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'product_id' => Yii::t('m/product', 'Product'),
			'sort_order' => Yii::t('m/product', 'Sort Order'),
			'create_time' => Yii::t('m/product', 'Create Time'),
			'update_time' => Yii::t('m/product', 'Update Time'),
			'product2categories' => null,
			'productI18ns' => null,
			'productImages' => null,
		);
	}

	public function search() {
		$alias = $this->tableAlias;
	
		$criteria = new CDbCriteria;

		$criteria->compare("{$alias}.product_id", $this->product_id);
		$criteria->compare("{$alias}.sort_order", $this->sort_order);
		$criteria->compare("{$alias}.create_time", $this->create_time, true);
		$criteria->compare("{$alias}.update_time", $this->update_time, true);

		$criteria->with = array('productI18ns');
		$criteria->group = "{$alias}.product_id";
		$criteria->together = true;

		$criteria->compare('productI18ns.status', $this->filterI18n->status);
		$criteria->compare('productI18ns.pic', $this->filterI18n->pic, true);
		$criteria->compare('productI18ns.title', $this->filterI18n->title, true);
		$criteria->compare('productI18ns.keywords', $this->filterI18n->keywords, true);
		$criteria->compare('productI18ns.description', $this->filterI18n->description, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
			'sort'=>array(
				'defaultOrder' => "{$alias}.sort_order DESC, {$alias}.product_id ASC",
				'multiSort'=>true,
				'attributes'=>array(
					'sort_order'=>array(
						'desc'=>"{$alias}.sort_order DESC",
						'asc'=>"{$alias}.sort_order ASC",
					),
					'*',
				),
			),
			'pagination' => array(
				'pageSize' => Yii::app()->request->getParam('pageSize', 10),
				'pageVar' => 'page',
			),
		));
	}

	public function behaviors() {
		return array(
			'CTimestampBehavior'=>array(
				'class' => 'zii.behaviors.CTimestampBehavior',
				'updateAttribute' => 'update_time',
				'createAttribute' => 'create_time',
				'setUpdateOnCreate' => true,
			),
        );
	}
}