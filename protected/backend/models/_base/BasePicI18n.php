<?php

/**
 * This is the model base class for the table "pic_i18n".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PicI18n".
 *
 * Columns in table "pic_i18n" available as properties of the model,
 * followed by relations of table "pic_i18n" available as properties of the model.
 *
 * @property integer $pic_i18n_id
 * @property integer $pic_id
 * @property integer $language_id
 * @property string $url
 * @property string $title
 * @property string $keywords
 * @property string $description
 *
 * @property Language $language
 * @property Pic $pic
 */
abstract class BasePicI18n extends GxActiveRecord {


	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'pic_i18n';
	}

	public static function label($n = 1) {
		return Yii::t('M/pici18n', 'PicI18n|PicI18ns', $n);
	}

	public static function representingColumn() {
		return 'url';
	}

	public function rules() {
		return array(
			array('pic_id, language_id, url, title, keywords, description', 'required'),
			array('pic_id, language_id', 'numerical', 'integerOnly'=>true),
			array('url, title', 'length', 'max'=>256),
			array('pic_i18n_id, pic_id, language_id, url, title, keywords, description', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'language' => array(self::BELONGS_TO, 'Language', 'language_id'),
			'pic' => array(self::BELONGS_TO, 'Pic', 'pic_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'pic_i18n_id' => Yii::t('M/pici18n', 'Pic I18n'),
			'pic_id' => null,
			'language_id' => null,
			'url' => Yii::t('M/pici18n', 'Url'),
			'title' => Yii::t('M/pici18n', 'Title'),
			'keywords' => Yii::t('M/pici18n', 'Keywords'),
			'description' => Yii::t('M/pici18n', 'Description'),
			'language' => null,
			'pic' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('pic_i18n_id', $this->pic_i18n_id);
		$criteria->compare('pic_id', $this->pic_id);
		$criteria->compare('language_id', $this->language_id);
		$criteria->compare('url', $this->url, true);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('keywords', $this->keywords, true);
		$criteria->compare('description', $this->description, true);


		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
			'sort'=>array(
				'attributes'=>array(
					'*',
				),
			),
		));
	}

	public function behaviors() {
		return array(
			'CTimestampBehavior'=>array(
				'class' => 'zii.behaviors.CTimestampBehavior',
				'updateAttribute' => null,
                'createAttribute' => null,
				'setUpdateOnCreate' => true,
			),
        );
	}
}